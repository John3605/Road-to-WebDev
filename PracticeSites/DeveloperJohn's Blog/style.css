* {
	box-sizing: border-box; /* Used universal selector so that all elements will now include padding & border in calculating box size */
}
html {
	font-size: 1.25rem; /* 20px on most screens; using REM to allow for browser accessiblity (so people can adjust font size themselves if they need to) */
}
header {
	position: fixed;
	z-index: 2;
	top: 0;
	left: 0;
	width: 100%;
/*	z-index: 1;*/
	background-color: #294969;
	color: ghostwhite;
	padding-right: 15px;
	padding-left: 15px;
	padding-bottom: 10px;
/*	A short-hand way to accomplish the padding atop would be through the following where the order goes as follows: Top Right Bottom Left > TRBL
	padding: 10px 15px 15px 10px
*/
	
/* Alternate Styling
	border-style: dashed solid;
	border-width: 16px 24px 8px 12px;
	border-color: tomato orchid olivedrab;
*/
	
/*	A short-hand for the border: */
	border: 12px solid #ffa949;
	border-bottom-color: #cf7919; /* Note: if this were to go before 'border: 12px...' then the cascade would not allow this color to display */
	
/* Keep in mind that all of the previous traits for padding & border also apply to margin	*/
	margin: 0;
}
header, body, article {
	padding-top: 10px;
	margin: 0;
}
body {
	border-top: 10px;
}
article {
	margin-top: 20vh;
}
section {
	min-height: 100vh; /* a 'vh' is a viewpot height; 100vh stands for the entire height of the viewport */
	padding: 1rem;
	border-bottom: 2px dotted #666;
	background-color: azure;
}
.small-img {
	width: 100%;
}
#interesting-banner {
	position: sticky;
	z-index: 3;
	top: 0;
	padding: 10px 15px;
	border: 12px solid lightsalmon;
	margin: 0 -8px;
	background: firebrick;
	color: white;
	font-weight: bold;
}
h1 {
	/* Not very useful in this state
	position: absolute;
	top: 20px;
	right: 10px;
	width: 100%;
	*/
	background-color: yellow;
}
/*
a {
	display: block;
	background-color: yellow;
}
*/
.hide {
	display: none; /* Anything with display set to none wont display even on text readers; useful only on user interaction where things are hidden until users are ready to see */
}
figure {
	position: relative;
	z-index: 1;
	margin: 0;
}
figcaption { /* Since figure's parent of figcaption, we can use absolute positioning to place caption over image */
	position: fixed;
	z-index: 1;
	width: 100%;
	bottom: 20px;
	background-color: yellow;
	text-align: center;
}
	
aside img, #bio { /* added #bio so as to mitigate & comply with the DRY coding principle */
	width: 100%;
	max-width: 600px;
	height: auto; /* Since image is in landscape; you must keep height as auto to prevent distortion */
	
}
#bio {
	padding: 2rem;
	border: 5px solid tomato;
	background-color: mistyrose;
}
	
/* This would be incredibly inefficient & would break the developer rule of 'Dont Repeat Yourself'; DRY
article {
	margin: 8px;
}
aside {
	margin: 8px;
}
footer {
	margin: 8px;
}
*/
article, aside, footer {
	margin: 0;
}
footer {
	width: 200px;
	padding: 4px;
	border: 2px solid #ffa949;
	margin: 30px auto 15px;
	color: #294969;
	font-size: .8rem;
	text-align: center;
}
ul li {
	display: block; 
	width: 90%;
	padding: 10px 0;
	margin-bottom: 10px;
	background-color: yellow;
	text-align: center;
}

/* Make sure to try to keep your media queries at the bottom of your css sheet*/
@media print { /* Within the media element you can create css rules that'll apply only to the specified attribute after the @media */
	section {
		min-height: auto; /* auto means to let the browser determine the min height */
	}
	#interesting-banner {
		display: none;
	}
}
/*The following media query makes sure that .small-img looks good even if the viewport screen is smaller than 300px*/
@media screen and (min-width: 600px) {
		.small-img {
		float: left; /* Has the image partitioned onto left side of viewport */
		width: 300px;
		margin: 0 1rem 1rem 0; 
	}
	.clear {
		clear: both; /* accepts left or right but both is best as you dont need to specify */
	}
}
@media screen and (min-width: 600px) and (max-width: 800px) {
	header {
		color: yellow;
	}
}
@media screen and (min-width: 730px) {
	ul li {
		display: inline-block;
		width: 30%;
	}
}
/*The following changes the background to cornsilk color if width is at least 900px or in portrait orientation (when the width surpasses height)*/
@media screen and (min-width: 900px), (orientation: portrait) {
	section {
		background-color: cornsilk;
	}
}
